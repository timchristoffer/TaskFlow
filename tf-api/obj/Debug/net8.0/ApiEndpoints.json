[
  {
    "ContainingType": "tf_api.Endpoints.BudgetEndpoints",
    "Method": "PostBudgetItem",
    "RelativePath": "budgetList/{budgetListId}/budgetItems",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "budgetListId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "budgetItem",
        "Type": "tf_api.Models.BudgetItem",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "tf_api.Endpoints.BudgetEndpoints",
    "Method": "GetAllBudgetLists",
    "RelativePath": "budgetLists",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dashboardId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "tf_api.Endpoints.BudgetEndpoints",
    "Method": "PostBudgetList",
    "RelativePath": "budgetLists",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "budgetList",
        "Type": "tf_api.Models.BudgetList",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "tf_api.Endpoints.BudgetEndpoints",
    "Method": "GetBudgetListById",
    "RelativePath": "budgetLists/{budgetListId}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "budgetListId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "tf_api.Endpoints.BudgetEndpoints",
    "Method": "PutBudgetList",
    "RelativePath": "budgetLists/{budgetListId}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "budgetListId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedBudgetList",
        "Type": "tf_api.Models.BudgetList",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "tf_api.Endpoints.BudgetEndpoints",
    "Method": "DeleteBudgetList",
    "RelativePath": "budgetLists/{budgetListId}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "budgetListId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "tf_api.Endpoints.DashboardEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapDashboardEndpoints\u003Eb__0_0",
    "RelativePath": "dashboards",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[tf_api.Models.Dashboard, tf-api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Dashboards"
    ],
    "EndpointName": "GetAllDashboards",
    "Description": "Retrieve a list of all dashboards",
    "Summary": "Get all dashboards"
  },
  {
    "ContainingType": "tf_api.Endpoints.DashboardEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapDashboardEndpoints\u003Eb__0_2",
    "RelativePath": "dashboards",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dashboard",
        "Type": "tf_api.Models.Dashboard",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "tf_api.Models.Dashboard",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      }
    ],
    "Tags": [
      "Dashboards"
    ],
    "EndpointName": "CreateDashboard",
    "Description": "Create a new dashboard and return the created dashboard",
    "Summary": "Create a new dashboard"
  },
  {
    "ContainingType": "tf_api.Endpoints.DashboardEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapDashboardEndpoints\u003Eb__0_1",
    "RelativePath": "dashboards/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "tf_api.Models.Dashboard",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Dashboards"
    ],
    "EndpointName": "GetDashboardById",
    "Description": "Retrieve a specific dashboard by its ID",
    "Summary": "Get dashboard by ID"
  },
  {
    "ContainingType": "tf_api.Endpoints.DashboardEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapDashboardEndpoints\u003Eb__0_3",
    "RelativePath": "dashboards/{id}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedDashboard",
        "Type": "tf_api.Models.Dashboard",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Dashboards"
    ],
    "EndpointName": "UpdateDashboard",
    "Description": "Update the details of a specific dashboard",
    "Summary": "Update a dashboard"
  },
  {
    "ContainingType": "tf_api.Endpoints.DashboardEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapDashboardEndpoints\u003Eb__0_4",
    "RelativePath": "dashboards/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Dashboards"
    ],
    "EndpointName": "DeleteDashboard",
    "Description": "Delete a specific dashboard by its ID",
    "Summary": "Delete a dashboard"
  },
  {
    "ContainingType": "tf_api.Endpoints.NotepadEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapNotepadEndpoints\u003Eb__0_0",
    "RelativePath": "notepads",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dashboardId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[tf_api.Models.Notepad, tf-api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Notepads"
    ],
    "EndpointName": "GetNotepadsForDashboard",
    "Description": "Retrieve a list of all notepads for a specific dashboard including their notes",
    "Summary": "Get all notepads for a specific dashboard"
  },
  {
    "ContainingType": "tf_api.Endpoints.NotepadEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapNotepadEndpoints\u003Eb__0_2",
    "RelativePath": "notepads",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notepad",
        "Type": "tf_api.Models.Notepad",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "tf_api.Models.Notepad",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      }
    ],
    "Tags": [
      "Notepads"
    ],
    "EndpointName": "CreateNotepad",
    "Description": "Create a new notepad and return the created notepad",
    "Summary": "Create a new notepad"
  },
  {
    "ContainingType": "tf_api.Endpoints.NotepadEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapNotepadEndpoints\u003Eb__0_1",
    "RelativePath": "notepads/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "tf_api.Models.Notepad",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Notepads"
    ],
    "EndpointName": "GetNotepadById",
    "Description": "Retrieve a specific notepad by its ID including its notes",
    "Summary": "Get notepad by ID"
  },
  {
    "ContainingType": "tf_api.Endpoints.NotepadEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapNotepadEndpoints\u003Eb__0_6",
    "RelativePath": "notepads/{id}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedNotepad",
        "Type": "tf_api.Models.Notepad",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Notepads"
    ],
    "EndpointName": "UpdateNotepad",
    "Description": "Update the details of a specific notepad",
    "Summary": "Update a notepad"
  },
  {
    "ContainingType": "tf_api.Endpoints.NotepadEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapNotepadEndpoints\u003Eb__0_7",
    "RelativePath": "notepads/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Notepads"
    ],
    "EndpointName": "DeleteNotepad",
    "Description": "Delete a specific notepad by its ID",
    "Summary": "Delete a notepad"
  },
  {
    "ContainingType": "tf_api.Endpoints.NotepadEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapNotepadEndpoints\u003Eb__0_3",
    "RelativePath": "notepads/{notepadId}/notes",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notepadId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "note",
        "Type": "tf_api.Models.Note",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "tf_api.Models.Note",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Notepads"
    ],
    "EndpointName": "CreateNoteForNotepad",
    "Description": "Create a new note for a specific notepad and return the created note",
    "Summary": "Create a new note for a notepad"
  },
  {
    "ContainingType": "tf_api.Endpoints.NotepadEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapNotepadEndpoints\u003Eb__0_4",
    "RelativePath": "notepads/{notepadId}/notes/{noteId}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notepadId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "noteId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedNote",
        "Type": "tf_api.Models.Note",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Notepads"
    ],
    "EndpointName": "UpdateNoteForNotepad",
    "Description": "Update the details of a specific note for a specific notepad",
    "Summary": "Update a note for a notepad"
  },
  {
    "ContainingType": "tf_api.Endpoints.NotepadEndpoints\u002B\u003C\u003Ec",
    "Method": "\u003CMapNotepadEndpoints\u003Eb__0_5",
    "RelativePath": "notepads/{notepadId}/notes/{noteId}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notepadId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "noteId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Notepads"
    ],
    "EndpointName": "DeleteNoteForNotepad",
    "Description": "Delete a specific note by its ID for a specific notepad",
    "Summary": "Delete a note for a notepad"
  },
  {
    "ContainingType": "tf_api.Endpoints.TodoEndpoints",
    "Method": "DeleteTodoById",
    "RelativePath": "todo/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Todolist"
    ],
    "EndpointName": "Delet Todo",
    "Description": "Removes a todo specified by id",
    "Summary": "Deletes a Todo"
  },
  {
    "ContainingType": "tf_api.Endpoints.TodoEndpoints",
    "Method": "AddTodoList",
    "RelativePath": "todolist",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "todoList",
        "Type": "tf_api.Models.TodoList",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "tf_api.Models.Todo",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Todolist"
    ],
    "EndpointName": "Create Todolist",
    "Description": "Create a new todoList in a specific dashboard and return the created Todolist",
    "Summary": "Create a new Todolist"
  },
  {
    "ContainingType": "tf_api.Endpoints.TodoEndpoints",
    "Method": "GetListById",
    "RelativePath": "todolist/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[tf_api.Models.TodoList, tf-api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Todolist"
    ],
    "EndpointName": "Get specific Todo lists",
    "Description": "Retrieve a Todo list without checking parent dashboard",
    "Summary": "Gets a specific Todo list"
  },
  {
    "ContainingType": "tf_api.Endpoints.TodoEndpoints",
    "Method": "DeleteListById",
    "RelativePath": "todolist/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Todolist"
    ],
    "EndpointName": "Delet Todolist",
    "Description": "Removes a whole list of Todos",
    "Summary": "Deletes a Todolist"
  },
  {
    "ContainingType": "tf_api.Endpoints.TodoEndpoints",
    "Method": "UpdateIsDone",
    "RelativePath": "todolist/{listId}/todo/{todoId}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "listId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "todoId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedTodo",
        "Type": "tf_api.Models.Todo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Todolist"
    ],
    "Description": "Updates if the todo is done or not",
    "Summary": "Updates IsDone"
  },
  {
    "ContainingType": "tf_api.Endpoints.TodoEndpoints",
    "Method": "AddTodoItemToList",
    "RelativePath": "todolist/{todoListId}/todos",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "todoListId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "todo",
        "Type": "tf_api.Models.Todo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "tf_api.Models.Todo",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Todolist"
    ],
    "EndpointName": "Create todo",
    "Description": "Create a new todo for a specific todoList in a specific dashboard and return the created todo",
    "Summary": "Create a new todo for a Todolist"
  },
  {
    "ContainingType": "tf_api.Endpoints.TodoEndpoints",
    "Method": "GetAllListsOfDashboard",
    "RelativePath": "todolists",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dashboardId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[tf_api.Models.TodoList, tf-api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "Todolist"
    ],
    "EndpointName": "Get all Todo lists",
    "Description": "Retrieve a list of all Todo lists for a specific dashboard including their todos",
    "Summary": "Get all Todolists for a specific dashboard"
  }
]